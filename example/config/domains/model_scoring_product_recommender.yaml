# Product Recommender Model Scoring Configuration
domain_id: model_scoring_product_recommender
description: "Product recommendation model API"

endpoints:
  predict:
    description: "Get personalized product recommendations"
    endpoint_type: "composite"
    input_schema:
      type: "object"
      properties:
        customer_id:
          type: "string"
          description: "Unique identifier for the customer"
        # These fields can be provided in the request body for context
        current_page:
          type: "string"
          description: "The category page the customer is currently viewing"
        recent_searches:
          type: "string"
          description: "Recent search terms, separated by pipe (|)"
        price_sensitivity:
          type: "string"
          description: "Price sensitivity (low/medium/high)"
    
    # Output format definition
    output_schema:
      type: "object"
      properties:
        customer_id:
          type: "string"
          description: "Unique identifier for the customer"
        recommendations:
          type: "array"
          items:
            type: "object"
            properties:
              product_id:
                type: "string"
                description: "Unique product identifier"
              name:
                type: "string"
                description: "Product name"
              relevance_score:
                type: "number"
                description: "Relevance score (0-1)"
              price_tier:
                type: "string"
                description: "Price tier (budget/mid-range/premium/luxury)"
              category:
                type: "string"
                description: "Product category"
        context:
          type: "object"
          description: "Context information used for the recommendations"
    
    data_sources:
      # Customer data from database
      - name: customer_data
        type: database
        operation: get_customer
        params:
          customer_id: "$request.path_params.model_name"
        condition: "$request.path_params.model_name != null"
      
      # Customer preferences from database
      - name: customer_preferences
        type: database
        operation: get_customer_preferences
        params:
          customer_id: "$request.path_params.model_name"
        condition: "$request.path_params.model_name != null"
      
      # Purchase history data
      - name: purchase_history
        type: database
        operation: get_customer_recent_purchases
        params:
          customer_id: "$request.path_params.model_name"
          limit: 10
        condition: "$request.path_params.model_name != null"
      
      # Context from request body
      - name: request_context
        type: direct
        operation: use_request_context
        params: "$request.body"
        condition: "$request.body != null && Object.keys($request.body).length > 0"
      
      # ML model recommendations
      - name: recommendations
        type: ml
        source_id: product_recommender
        operation: recommend
        params:
          features:
            # Customer ID
            customer_id: "$customer_data.customer_id || $request.path_params.model_name || 'unknown'"
            
            # Customer preferences
            preferred_categories: "$customer_preferences.preferred_categories || ''"
            device_preference: "$customer_preferences.device_preference || 'desktop'"
            
            # Context from request or preferences
            current_page: "$request_context.current_page || ''"
            recent_searches: "$request_context.recent_searches || $customer_preferences.recent_searches || ''"
            
            # Purchase history derived features
            purchase_frequency: "$customer_data.purchase_frequency || 'medium'"
            price_sensitivity: "$request_context.price_sensitivity || 'medium'"
    
    # Response mapping to create a unified response format
    response_mapping:
      customer_id: "$customer_data.customer_id || $request.path_params.model_name || 'unknown'"
      recommendations: "$recommendations.recommendations"
      context: "$recommendations.context"
      timestamp: "$recommendations.timestamp"