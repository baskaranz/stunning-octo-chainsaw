# Example ML service configuration with different model loading strategies

ml:
  sources:
    # Standard HTTP API model (existing approach)
    http_model:
      base_url: "http://localhost:5001"
      models:
        default:
          endpoint: "/predict"
          timeout: 30
          headers:
            Content-Type: "application/json"
    
    # Model loaded from local artifacts
    local_artifact_model:
      base_url: "http://localhost:5002"  # Used as fallback if model loading fails
      models:
        default:
          endpoint: "/predict"
          source:
            type: "local_artifact"
            path: "./models/local_model"
            startup_command: "python -m app.serve --model_path ./model.pkl --port 8501"
            host: "localhost"
            port: 8501
            startup_delay: 5  # Seconds to wait for model to start
    
    # Model loaded from Docker image
    docker_model:
      base_url: "http://localhost:5003"  # Used as fallback if model loading fails
      models:
        default:
          endpoint: "/predict"
          source:
            type: "docker"
            image: "ml-model-service:latest"
            pull: true  # Set to false to use local image only
            host_port: 8502  # Host port to bind
            container_port: 8000  # Port inside container
            environment:
              MODEL_PATH: "/app/models/model.pkl"
              LOG_LEVEL: "INFO"
            volumes:
              "./models": "/app/models"  # Mount local models directory
            startup_delay: 8  # Seconds to wait for container to start
    
    # Model loaded from ECR
    ecr_model:
      base_url: "http://localhost:5004"  # Used as fallback if model loading fails
      models:
        default:
          endpoint: "/predict"
          source:
            type: "ecr"
            repository: "ml-models/prediction-service"
            tag: "latest"
            region: "us-east-1"
            host_port: 8503
            container_port: 8000
            environment:
              MODEL_TYPE: "production"
            startup_delay: 10